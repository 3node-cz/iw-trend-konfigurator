{% comment %}
  Universal Configurator Block
  Can be placed anywhere on the site - not product specific
  Shows customer info and metafields if logged in
{% endcomment %}

{% assign primary_color = shop.metafields.configurator.primary_color | default: "#007cba" %}

<!-- React App Container -->
<div class="universal-configurator" id="configurator-{{ block.id }}">
  <!-- Loading state while React loads -->
  <div class="configurator-loading" id="loading-{{ block.id }}">
    <div class="configurator-header">
      <h3 style="color: {{ primary_color }};">{{ block.settings.title }}</h3>
      {% if block.settings.description != blank %}
        <p class="configurator-description">{{ block.settings.description }}</p>
      {% endif %}
    </div>
    <div class="loading-spinner">Loading...</div>
  </div>

  <!-- React app will mount here -->
  <div class="configurator-react-root" id="react-root-{{ block.id }}" style="display: none;"></div>
</div>

<!-- Pass Shopify data to React -->
<script type="application/json" id="shopify-data-{{ block.id }}">
{
  "customer": {% if customer %}
    {
      "id": "{{ customer.id }}",
      "firstName": "{{ customer.first_name }}",
      "lastName": "{{ customer.last_name }}",
      "email": "{{ customer.email }}",
      "metafields": {
        "saved_configurations": {% if customer.metafields.custom.saved_configurations %}"{{ customer.metafields.custom.saved_configurations | escape }}"{% else %}null{% endif %},
        "discount_percentage": {% if customer.metafields.custom.discount_percentage %}"{{ customer.metafields.custom.discount_percentage | escape }}"{% else %}null{% endif %}
      }
    }
  {% else %}
    null
  {% endif %},
  "shop": {
    "domain": "{{ shop.domain }}",
    "name": "{{ shop.name }}"
  },
  "settings": {
    "title": "{{ block.settings.title }}",
    "description": "{{ block.settings.description }}",
    "primaryColor": "{{ primary_color }}",
    "showCustomerDetails": {{ block.settings.show_customer_details }},
    "showMetafields": {{ block.settings.show_metafields }}
  },
  "blockId": "{{ block.id }}"
}
</script>

<!-- Our React App Bundle -->
<script>
  window.ConfiguratorConfig = window.ConfiguratorConfig || {};
  window.ConfiguratorConfig['{{ block.id }}'] = JSON.parse(
    document.getElementById('shopify-data-{{ block.id }}').textContent
  );
</script>

<script defer src="{{ 'configurator-widget.umd.js' | asset_url }}?v={{ 'now' | date: '%s' }}"></script>

{% comment %} Fallback for old content - will be hidden by React {% endcomment %}
<div style="display: none;">
  {% comment %} Customer Information Section {% endcomment %}
  <div class="customer-info-section">
    {% if customer %}
      <div class="customer-welcome">
        <h4>Welcome back, {{ customer.first_name | default: customer.email }}! ðŸ‘‹</h4>

        {% if block.settings.show_customer_details %}
        <div class="customer-details">
          {% if customer.first_name or customer.last_name %}
            <p><strong>Name:</strong> {{ customer.first_name }} {{ customer.last_name }}</p>
          {% endif %}
        </div>
        {% endif %}

        {% if block.settings.show_metafields %}
        <div class="customer-metafields">
          <h5>Your Saved Configurations:</h5>
          <div class="metafields-grid">
            {% assign saved_configurations = customer.metafields.custom.saved_configurations %}
            {% if saved_configurations %}
              <div class="metafield-item">
                <span class="metafield-label">Configurations:</span>
                <span class="metafield-value">{{ saved_configurations }}</span>
              </div>
            {% else %}
              <p class="no-metafields">No saved configurations yet. Create your first configuration below!</p>
            {% endif %}

            {% comment %} Display all metafields for debugging (if enabled) {% endcomment %}
            {% if block.settings.show_all_metafields %}
              {% for metafield in customer.metafields %}
                {% if metafield[1].namespace != blank %}
                  <div class="metafield-item debug">
                    <span class="metafield-label">{{ metafield[1].namespace }}.{{ metafield[1].key }}:</span>
                    <span class="metafield-value">{{ metafield[1].value }}</span>
                  </div>
                {% endif %}
              {% endfor %}
            {% endif %}
          </div>
        </div>
        {% endif %}
      </div>
    {% else %}
      <div class="customer-login-prompt">
        <p>ðŸ‘¤ <a href="/account/login">Login</a> or <a href="/account/register">create an account</a> to save your preferences and see personalized recommendations.</p>
      </div>
    {% endif %}
  </div>

  {% if customer %}
  <div class="configurator-form">
    <h5>Edit Your Configuration Data:</h5>

    <div class="configurator-option">
      <label for="configurator-metafield-{{ block.id }}">Saved Configurations (JSON):</label>
      <textarea
        id="configurator-metafield-{{ block.id }}"
        name="saved_configurations"
        rows="8"
        class="configurator-textarea"
        placeholder="Enter your configuration data in JSON format..."
      >{{ customer.metafields.custom.saved_configurations }}</textarea>
      <small style="color: #666;">Edit the JSON data above directly. Make sure to keep valid JSON format.</small>
    </div>

    <div class="configurator-actions">
      <button
        type="button"
        class="configurator-submit-btn"
        style="background-color: {{ primary_color }};"
      >
        Update Configuration Data
      </button>
    </div>
  </div>
  {% else %}
    <div class="customer-login-prompt">
      <p>ðŸ‘¤ <a href="/account/login">Login</a> to edit your configuration data.</p>
    </div>
  {% endif %}

  {% comment %} Results area {% endcomment %}
  <div class="configurator-results" id="results-{{ block.id }}" style="display: none;">
    <h4>Configuration Summary:</h4>
    <div class="results-content">
      <!-- Results will be populated here -->
    </div>
  </div>
</div>

<style>
/* Override theme layout for configurator block */
.layout-panel-flex--column:has([data-block-handle="universal_konfigurator"]) {
  --horizontal-alignment: stretch !important;
  align-items: stretch !important;
}

/* Override Shopify theme z-index for section containing configurator */
.custom-section-content:has(.universal-configurator) {
  z-index: unset !important;
}

.universal-configurator {
  border: 1px solid #e0e0e0;
  border-radius: 8px;
  padding: 20px;
  margin: 20px 0;
  background: #fff;
  width: 100%;
  /* High z-index so dialogs appear above page content */
  position: relative;
  z-index: 999999;
}

.configurator-widget {
  width: 100%;
}

.loading-spinner {
  text-align: center;
  padding: 2rem;
  color: #666;
  font-style: italic;
}

.configurator-message {
  margin-top: 1rem;
  padding: 0.75rem;
  border: 1px solid;
  border-radius: 4px;
  font-size: 0.875rem;
}

.configurator-message.success {
  background-color: #f0f8ff;
}

.configurator-message.error {
  background-color: #fff5f5;
}

/* Customer Information Styles */
.customer-info-section {
  margin-bottom: 25px;
  padding-bottom: 20px;
  border-bottom: 1px solid #f0f0f0;
}

.customer-welcome h4 {
  margin: 0 0 15px 0;
  color: {{ primary_color }};
  font-size: 1.1em;
}

.customer-details {
  background: #f8f9fa;
  padding: 15px;
  border-radius: 6px;
  margin-bottom: 15px;
}

.customer-details p {
  margin: 5px 0;
  font-size: 14px;
}

.customer-metafields h5 {
  margin: 0 0 10px 0;
  color: #333;
  font-size: 1em;
}

.metafields-grid {
  display: grid;
  gap: 10px;
}

.metafield-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 8px 12px;
  background: #fff;
  border: 1px solid #e9ecef;
  border-radius: 4px;
}

.metafield-item.debug {
  background: #fff3cd;
  border-color: #ffeaa7;
}

.metafield-label {
  font-weight: 500;
  color: #495057;
  font-size: 14px;
}

.metafield-value {
  color: {{ primary_color }};
  font-weight: 500;
  font-size: 14px;
}

.metafield-value.badge {
  background: {{ primary_color }};
  color: white;
  padding: 3px 8px;
  border-radius: 12px;
  font-size: 12px;
  text-transform: uppercase;
}

.no-metafields {
  color: #6c757d;
  font-style: italic;
  text-align: center;
  margin: 15px 0;
}

.customer-login-prompt {
  background: #e7f3ff;
  padding: 15px;
  border-radius: 6px;
  border-left: 4px solid {{ primary_color }};
}

.customer-login-prompt p {
  margin: 0;
  color: #495057;
}

.customer-login-prompt a {
  color: {{ primary_color }};
  text-decoration: none;
  font-weight: 500;
}

.customer-login-prompt a:hover {
  text-decoration: underline;
}


.configurator-header h3 {
  margin: 0 0 10px 0;
  font-size: 1.3em;
  text-align: center;
}

.configurator-description {
  color: #666;
  margin-bottom: 20px;
  text-align: center;
}

.configurator-option {
  margin-bottom: 15px;
}

.configurator-option label {
  display: block;
  margin-bottom: 5px;
  font-weight: 500;
}

.configurator-select,
.configurator-input,
.configurator-textarea {
  width: 100%;
  padding: 10px 12px;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 14px;
  font-family: inherit;
}

.configurator-textarea {
  resize: vertical;
  min-height: 80px;
}

.configurator-submit-btn {
  width: 100%;
  padding: 15px 24px;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 16px;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.configurator-submit-btn:hover {
  opacity: 0.9;
  transform: translateY(-1px);
}

.configurator-results {
  margin-top: 20px;
  padding: 15px;
  background: #f0f8ff;
  border-radius: 4px;
  border-left: 4px solid {{ primary_color }};
}

.configurator-results h4 {
  margin: 0 0 10px 0;
  color: {{ primary_color }};
}

@media (max-width: 768px) {
  .universal-configurator {
    padding: 15px;
    margin: 10px;
  }
}
</style>

<!-- Old JavaScript removed - now using React -->

{% schema %}
{
  "name": "Universal Configurator",
  "target": "section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Configure Your Requirements"
    },
    {
      "type": "textarea",
      "id": "description",
      "label": "Description",
      "default": "Tell us what you're looking for and we'll help you find the perfect solution."
    },
    {
      "type": "header",
      "content": "Customer Information"
    },
    {
      "type": "checkbox",
      "id": "show_customer_details",
      "label": "Show Customer Details",
      "default": true,
      "info": "Display customer name, email, phone, and order history"
    },
    {
      "type": "checkbox",
      "id": "show_metafields",
      "label": "Show Customer Metafields",
      "default": true,
      "info": "Display customer preferences and custom fields"
    },
    {
      "type": "checkbox",
      "id": "show_all_metafields",
      "label": "Show All Metafields (Debug)",
      "default": false,
      "info": "Show all customer metafields for debugging purposes"
    }
  ]
}
{% endschema %}